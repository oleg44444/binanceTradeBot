const binanceClientPromise = require('../utils/binanceClient');

async function fetchOHLCV(symbol, timeframe, limit = 100) {
  const binance = await binanceClientPromise();
  try {
    console.log(`üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${limit} —Å–≤—ñ—á–æ–∫ ${timeframe} –¥–ª—è ${symbol}...`);
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —á–∞—Å—É –¥–ª—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Å–≤—ñ—á–æ–∫
    const since = Date.now() - (1000 * 60 * 60 * 24 * 7); // 1 —Ç–∏–∂–¥–µ–Ω—å –Ω–∞–∑–∞–¥
    
    // –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
    const candles = await binance.fetchOHLCV(symbol, timeframe, since, limit);
    
    if (!candles || candles.length === 0) {
      throw new Error('–ù–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö —Å–≤—ñ—á–æ–∫');
    }
    
    console.log(`‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ ${candles.length} —Å–≤—ñ—á–æ–∫`);
    return candles;
  } catch (error) {
    console.error(`üî¥ –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–≤—ñ—á–æ–∫: ${error.message}`);
    throw error;
  }
}

module.exports = fetchOHLCV;