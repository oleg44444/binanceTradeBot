const binanceClientPromise = require('../utils/binanceClient');

async function fetchOHLCV(symbol, timeframe, limit = 250) {
  const binance = await binanceClientPromise();
  try {
    console.log(`\uD83D\uDCC8 –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${limit} —Å–≤—ñ—á–æ–∫ ${timeframe} –¥–ª—è ${symbol}...`);

    const since = Date.now() - (1000 * 60 * 60 * 24 * 7);
    const candles = await binance.fetchOHLCV(symbol, timeframe, since, limit);

    if (!candles || candles.length === 0) {
      throw new Error('–ù–µ –æ—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö —Å–≤—ñ—á–æ–∫');
    }

    console.log(`‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ ${candles.length} —Å–≤—ñ—á–æ–∫`);

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –º–∞—Å–∏–≤ –º–∞—Å–∏–≤—ñ–≤ –±–µ–∑ –∑–º—ñ–Ω (–¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É —Ç–∏–ø—ñ–≤)
    return candles;
  } catch (error) {
    console.error(`üî¥ –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–≤—ñ—á–æ–∫: ${error.message}`);
    throw error;
  }
}

module.exports = fetchOHLCV;
